// <auto-generated />
using EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EntityFramework.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EntityFramework.Film", b =>
                {
                    b.Property<int>("IdFilm")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnneeDeSortie")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<int>("IdReal")
                        .HasColumnType("int");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("IdFilm");

                    b.HasIndex("IdReal");

                    b.HasIndex("Titre")
                        .IsUnique();

                    b.ToTable("Film");

                    b.HasCheckConstraint("CK_FILM", "AnneeDeSortie > 1975");

                    b.HasData(
                        new
                        {
                            IdFilm = 1,
                            AnneeDeSortie = 1977,
                            Genre = "Science-Fiction",
                            IdReal = 10,
                            Titre = "Star Wars : Un nouvel espoir"
                        },
                        new
                        {
                            IdFilm = 2,
                            AnneeDeSortie = 1980,
                            Genre = "Science-Fiction",
                            IdReal = 10,
                            Titre = "Star Wars : L'empire contre-attaque"
                        },
                        new
                        {
                            IdFilm = 3,
                            AnneeDeSortie = 1983,
                            Genre = "Science-Fiction",
                            IdReal = 10,
                            Titre = "Star Wars : Le retour du Jedi"
                        },
                        new
                        {
                            IdFilm = 4,
                            AnneeDeSortie = 2005,
                            Genre = "Société",
                            IdReal = 8,
                            Titre = "Hooligans"
                        },
                        new
                        {
                            IdFilm = 5,
                            AnneeDeSortie = 2001,
                            Genre = "Heroic-Fantasy",
                            IdReal = 9,
                            Titre = "LOTR - La communauté de l'anneau"
                        },
                        new
                        {
                            IdFilm = 6,
                            AnneeDeSortie = 2002,
                            Genre = "Heroic-Fantasy",
                            IdReal = 9,
                            Titre = "LOTR - Les deux tours"
                        },
                        new
                        {
                            IdFilm = 7,
                            AnneeDeSortie = 2003,
                            Genre = "Heroic-Fantasy",
                            IdReal = 9,
                            Titre = "LOTR - Le retour du roi"
                        });
                });

            modelBuilder.Entity("EntityFramework.Models.Acteur", b =>
                {
                    b.Property<int>("IdActeur")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdFilm")
                        .HasColumnType("int");

                    b.Property<int>("IdPers")
                        .HasColumnType("int");

                    b.HasKey("IdActeur");

                    b.HasIndex("IdFilm");

                    b.HasIndex("IdPers");

                    b.ToTable("Acteur");

                    b.HasData(
                        new
                        {
                            IdActeur = 1,
                            IdFilm = 1,
                            IdPers = 3
                        },
                        new
                        {
                            IdActeur = 2,
                            IdFilm = 1,
                            IdPers = 4
                        },
                        new
                        {
                            IdActeur = 3,
                            IdFilm = 1,
                            IdPers = 5
                        },
                        new
                        {
                            IdActeur = 4,
                            IdFilm = 2,
                            IdPers = 3
                        },
                        new
                        {
                            IdActeur = 5,
                            IdFilm = 2,
                            IdPers = 4
                        },
                        new
                        {
                            IdActeur = 6,
                            IdFilm = 2,
                            IdPers = 5
                        },
                        new
                        {
                            IdActeur = 7,
                            IdFilm = 3,
                            IdPers = 3
                        },
                        new
                        {
                            IdActeur = 8,
                            IdFilm = 3,
                            IdPers = 4
                        },
                        new
                        {
                            IdActeur = 9,
                            IdFilm = 3,
                            IdPers = 5
                        },
                        new
                        {
                            IdActeur = 10,
                            IdFilm = 4,
                            IdPers = 1
                        },
                        new
                        {
                            IdActeur = 11,
                            IdFilm = 4,
                            IdPers = 2
                        },
                        new
                        {
                            IdActeur = 12,
                            IdFilm = 5,
                            IdPers = 1
                        },
                        new
                        {
                            IdActeur = 13,
                            IdFilm = 5,
                            IdPers = 6
                        },
                        new
                        {
                            IdActeur = 14,
                            IdFilm = 5,
                            IdPers = 7
                        },
                        new
                        {
                            IdActeur = 15,
                            IdFilm = 6,
                            IdPers = 1
                        },
                        new
                        {
                            IdActeur = 16,
                            IdFilm = 6,
                            IdPers = 6
                        },
                        new
                        {
                            IdActeur = 17,
                            IdFilm = 6,
                            IdPers = 7
                        },
                        new
                        {
                            IdActeur = 18,
                            IdFilm = 7,
                            IdPers = 1
                        },
                        new
                        {
                            IdActeur = 19,
                            IdFilm = 7,
                            IdPers = 6
                        },
                        new
                        {
                            IdActeur = 20,
                            IdFilm = 7,
                            IdPers = 7
                        });
                });

            modelBuilder.Entity("EntityFramework.Models.Personne", b =>
                {
                    b.Property<int>("IdPers")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("IdPers");

                    b.ToTable("Personne");

                    b.HasData(
                        new
                        {
                            IdPers = 1,
                            Nom = "Wood",
                            Prenom = "Elijah"
                        },
                        new
                        {
                            IdPers = 2,
                            Nom = "Hunnam",
                            Prenom = "Charlie"
                        },
                        new
                        {
                            IdPers = 3,
                            Nom = "Ford",
                            Prenom = "Harisson"
                        },
                        new
                        {
                            IdPers = 4,
                            Nom = "Hammil",
                            Prenom = "Mark"
                        },
                        new
                        {
                            IdPers = 5,
                            Nom = "Fisher",
                            Prenom = "Carrie"
                        },
                        new
                        {
                            IdPers = 6,
                            Nom = "Mortensen",
                            Prenom = "Vigo"
                        },
                        new
                        {
                            IdPers = 7,
                            Nom = "Bloom",
                            Prenom = "Orlando"
                        },
                        new
                        {
                            IdPers = 8,
                            Nom = "Alexander",
                            Prenom = "Lexi"
                        },
                        new
                        {
                            IdPers = 9,
                            Nom = "Jackson",
                            Prenom = "Peter"
                        },
                        new
                        {
                            IdPers = 10,
                            Nom = "Lucas",
                            Prenom = "Georges"
                        });
                });

            modelBuilder.Entity("EntityFramework.Film", b =>
                {
                    b.HasOne("EntityFramework.Models.Personne", "Realisateur")
                        .WithMany("Films")
                        .HasForeignKey("IdReal")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("EntityFramework.Models.Acteur", b =>
                {
                    b.HasOne("EntityFramework.Film", "F")
                        .WithMany("Acteurs")
                        .HasForeignKey("IdFilm")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityFramework.Models.Personne", "P")
                        .WithMany("Actorat")
                        .HasForeignKey("IdPers")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
