// <auto-generated />
using System;
using EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EntityFramework.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200305140233_DBComplete")]
    partial class DBComplete
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EntityFramework.Film", b =>
                {
                    b.Property<int>("IdFilm")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActeurPrincipal")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<int>("AnneeDeSortie")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<int?>("RealisateurIdPers")
                        .HasColumnType("int");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("IdFilm");

                    b.HasIndex("RealisateurIdPers");

                    b.HasIndex("Titre")
                        .IsUnique();

                    b.ToTable("Film");

                    b.HasCheckConstraint("CK_FILM", "AnneeDeSortie > 1975");
                });

            modelBuilder.Entity("EntityFramework.Models.Acteur", b =>
                {
                    b.Property<int>("IdPers")
                        .HasColumnType("int");

                    b.Property<int>("IdFilm")
                        .HasColumnType("int");

                    b.HasKey("IdPers", "IdFilm");

                    b.HasIndex("IdFilm");

                    b.ToTable("Acteur");
                });

            modelBuilder.Entity("EntityFramework.Models.Personne", b =>
                {
                    b.Property<int>("IdPers")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("IdPers");

                    b.ToTable("Personne");
                });

            modelBuilder.Entity("EntityFramework.Film", b =>
                {
                    b.HasOne("EntityFramework.Models.Personne", "Realisateur")
                        .WithMany("Films")
                        .HasForeignKey("RealisateurIdPers");
                });

            modelBuilder.Entity("EntityFramework.Models.Acteur", b =>
                {
                    b.HasOne("EntityFramework.Film", "F")
                        .WithMany("Acteurs")
                        .HasForeignKey("IdFilm")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityFramework.Models.Personne", "P")
                        .WithMany("Actorat")
                        .HasForeignKey("IdPers")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
